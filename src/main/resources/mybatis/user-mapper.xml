<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.easyPayment.user">

	<resultMap type="User" id="userResultMap">
		<result property="id" column="ID" />
		<result property="firstName" column="FIRST_NAME" />
		<result property="lastName" column="LAST_NAME" />
		<result property="email" column="EMAIL" />
		<result property="phone" column="PHONE" />
		<result property="password" column="PASSWORD" />
		<result property="salt" column="SALT" />
		<result property="createAt" column="CREATED_AT" />
		<result property="updateAt" column="UPDATED_AT" />
		<result property="deleteAt" column="DELETED_AT" />
	</resultMap>

	<select id="getUser" parameterType="User" resultMap="userResultMap">
		select * from USER where 1=1
		<if test="id != null">
			and ID = #{id}
		</if>
		<if test="firstName != null">
			and FIRST_NAME = #{firstName}
		</if>
		<if test="lastName != null">
			and LAST_NAME = #{lastName}
		</if>
		<if test="email != null">
			and EMAIL = #{email}
		</if>
		<if test="phone != null">
			and PHONE = #{phone}
		</if>
		<if test="password != null">
			and PASSWORD = #{password}
		</if>
		<if test="salt != null">
			and SALT = #{salt}
		</if>

	</select>

	<!-- <if test="deleteAt == null"> and DELETE_AT = null </if> <if test="deleteAt 
		!= null"> and DELETE_AT = #{deleteAt} </if> -->

	<update id="updateUser" parameterType="User">
		update USER
		<trim prefix="SET" suffixOverrides=",">
			<if test="firstName != null">FIRST_NAME = #{firstName}</if>
			<if test="lsetName != null">LAST_NAME = #{lastName}</if>
			<if test="email != null">EMAIL = #{email}</if>
			<if test="phone != null">PHONE = #{phone}</if>
			<if test="password != null">PASSWORD = #{password}</if>
			<if test="salt != null">SALT = #{salt}</if>
			<if test="updateAt != null">UPDATED_AT = #{updateAt}</if>
			<if test="deleteAt != null">DELETED_AT = #{deleteAt}</if>
		</trim>
		where ID = #{id}
	</update>

	<insert id="insertUser" parameterType="User">
		insert into USER
		(ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE,PASSWORD,SALT,CREATED_AT)
		values(0,#{firstName},#{lastName},#{email},#{phone},#{password},
		#{salt}, #{createAt})
		<selectKey resultType="int" keyProperty="id">
			SELECT
			LAST_INSERT_ID() AS id
		</selectKey>
	</insert>

	<select id="getUserList" resultMap="userResultMap">
		select USER where ID in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<insert id="newUserRelation" parameterType="java.util.Map">
		insert into USER_RELATION (USER1_ID, USER2_ID, RELATION_TYPE, ID)
		values(#{user_1}, #{user_2}, #{relationType}, 0)
		<selectKey resultType="int" keyProperty="id">
			SELECT
			LAST_INSERT_ID() AS id
		</selectKey>
	</insert>

	<select id="getRelations" parameterType="java.util.Map">
		select USER2_ID from
		USER_RELATIONS where USER1_ID = #{user_id}
	</select>

	<delete id="deleteRelation" parameterType="java.util.Map">
		delete from	USER_RELATIONS 
		where USER1_ID = #{user_1} and USER2_ID = #{user_2}
	</delete>

</mapper>